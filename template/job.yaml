apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    kube-queue-message-payload: '<%= payload %>'
    kube-queue-job-class: "<%= spec.job_class %>"
    kube-queue-job-id: "<%= job.job_id %>"
  name: "<%= spec.job_name(job.job_id) %>"
  namespace: <%= spec.namespace %>
  labels:
    kube-queue-job: "true"
    kube-queue-worker-name: "<%= spec.worker_name %>"
    kube-queue-job-class: "<%= spec.job_class %>"
    kube-queue-job-id: "<%= job.job_id %>"
spec:
  template:
    metadata:
      annotations:
        kube-queue-message-payload: '<%= payload %>'
        kube-queue-job-class: "<%= spec.job_class %>"
        kube-queue-job-id: "<%= job.job_id %>"
      labels:
        kube-queue-job: "true"
        kube-queue-worker-name: "<%= spec.worker_name %>"
        kube-queue-job-class: "<%= spec.job_class %>"
        kube-queue-job-id: "<%= job.job_id %>"
<%- spec.job_labels.each do |key, value| %>
        <%= key %>: "<%= value %>"
<%- end %>
    spec:
      containers:
      - name: "<%= spec.container_name %>"
        image: "<%= spec.image %>"
        command: <%= spec.command %>
        env:
        - name: "KUBE_QUEUE_MESSAGE_PAYLOAD"
          value: '<%= payload %>'
<%- spec.env.each do |key, value| %>
        - name: "<%= key %>"
          value: "<%= value %>"
<%- end %>
      restartPolicy: "<%= spec.restart_policy %>"
  backoffLimit: <%= spec.backoff_limit %>
  activeDeadlineSeconds: <%= spec.active_deadline_seconds %>
