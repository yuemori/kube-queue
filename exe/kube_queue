#!/usr/bin/env ruby

require 'rubygems'
require 'thor'
require 'kube_queue'
require 'kube_queue/runner'

module KubeQueue
  class CLI < Thor
    default_task :version

    desc 'runner JOB_NAME [PAYLOAD]', 'run worker'
    method_option :require, aliases: '-r', type: :string, desc: 'Location of Rails application with workers or file to require'
    def runner(job_name, payload = nil)
      load_files!

      payload ||= ENV['KUBE_QUEUE_MESSAGE_PAYLOAD']

      runner = Runner.new(job_name)

      runner.run(payload)
    end

    desc 'version', 'Prints version'
    def version
      say "KubeQueue version #{KubeQueue::VERSION}"
    end

    private

    def load_files!
      return unless options[:require]

      raise "#{options[:require]} dosent exist." unless File.exist?(options[:require])

      files = File.directory?(options[:require]) ? Dir.glob(File.join(options[:require], '**/*.rb')) : [options[:require]]

      files.each do |file|
        require file
      end
    end
  end
end

KubeQueue::CLI.start
